name: CI/CD Pipeline 

on:
  push: 
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  Continuous-Integration:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        continue-on-error: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
        continue-on-error: false

      - name: Install Docker using Docker's official script
        run: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
        continue-on-error: false
        
      - name: Install Docker Compose
        run: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version
        continue-on-error: false

      - name: Install dependencies
        working-directory: ./nodejs
        run: npm install
        continue-on-error: false

      - name: Start application-specific services using Docker Compose
        run: docker-compose up -d
        continue-on-error: false

      - name: Check service health
        uses: jaracogmbh/docker-compose-health-check-action@v1.0.0
        with:
          max-retries: 30
          retry-interval: 10
          compose-file: "docker-compose.yml"
          skip-exited: "true"
          skip-no-healthcheck: "true"
      
      - name: Log in to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_PASSWORD}}

      - name: push image to docker hub
        run: |
          docker-compose build
          IMAGE_NAME="radjes/devops-project:latest"
          docker tag webserver $IMAGE_NAME 
          docker push $IMAGE_NAME 
  
  Continuous-Delivery:
    needs: Continuous-Integration
    runs-on: self-hosted

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run docker-compose
        run: docker-compose up -d
